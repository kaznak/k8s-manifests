#!/bin/bash
#|
#| NAME
#|      rename-k8s-manifest: マニフェストファイルをリネームする
#| SYNOPSIS
#|      rename-k8s-manifest
#| DESCRIPTION
#|      リネームしたいファイルの名前を標準入力から入力すると
#|      <.kind>.<.metadata.name>.yaml の形式にリネームされる。
#|      kind と name が取得できなかった場合はスキップされる。
#| 

set -Cu
set -Ee
set -o pipefail
shopt -s nullglob

stime=$(date +%Y%m%d%H%M%S%Z)
based=$(readlink -f $(dirname $0)/..)
pname=$(basename $0)

exec 3>&2
# logd=$based/log
# exec 3>&2 2>$logd/$pname.$stime.$$.log
# set -vx

MSG() {
    echo "$pname pid:$$ stime:$stime etime:$(date +%Y%m%d%H%M%S%Z) $@"	>&3
}

tmpd=$(mktemp -d -t "$pname.$stime.$$.XXXXXXXX")/
if [ 0 -ne "$?" ] ; then
    MSG "line:$LINENO FATAL can not make temporally directory."
    exit 1
fi

trap 'BEFORE_EXIT' EXIT
BEFORE_EXIT()	{
    rm -rf $tmpd
}

trap 'ERROR_HANDLER' ERR
export EMSG="line:$LINENO ERROR"
ERROR_HANDLER()	{
    MSG "line:$LINENO ERROR status ${PIPESTATUS[@]}"
    [ "$EMSG" ] && MSG $EMSG
    touch $tmpd/ERROR	# for child process error detection
    MSG "line:$LINENO EXIT with error."
    exit 1		# root process trigger BEFORE_EXIT function
}

PROGRESS() {
    lineno="$1"
    shift
    print="$1"
    PMSG="$*"
    if [ "$print" != "_" ]; then
        MSG "line:$lineno INFO $PMSG"
    fi
    EMSG="line:$lineno ERROR while $PMSG"
}

print_help() {
    grep '^#|' "$0" | sed 's/^#|//'
}

################################################################
PROGRESS $LINENO "_" "Main Process"

while read -r f; do
    dir=$(dirname $f)
    newf=$(yq eval '"\(.kind).\(.metadata.name).yaml"' $f)
    if ! echo $newf | grep -q "^.\+.\+\.yaml$"; then
        echo "SKIP $f" >&2
    else
        mv "$f" "$dir/$newf"
        echo $f $dir/$newf
    fi
done

################################################################
PROGRESS $LINENO "_" "Finish"
exit 0
